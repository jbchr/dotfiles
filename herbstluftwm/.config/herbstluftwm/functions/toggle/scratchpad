# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="toggle/scratchpad $@" . $PARENT

# herbstluftwm
# ══════════════════════════════════════════════════════════════════════════════

# ............................................................ Toggle scratchpad

name=scratchpad
SCRATCHPAD=$HLWM:scratchpad
# simple tabbed, tmux or byobu
term=tmux

pstat + 'toggle scratchpad' && exit
# kill any extra tmux sessions spawned (default 2 processes)..
kill -TERM $(pgrep -f 'tmux -2 -f' | sed '1,2d') 2>/dev/null

# search [<option>* [<command>]]
search() { xdotool search $1 --limit 1 --name $name $2 2>/dev/null; }

winid() { printf '0x%x' $(search --onlyvisible); }

focus_check() { [ "$(query wname)" = $name ] && exit; }

# .......................................................... Hide visible window

if search --onlyvisible >/dev/null ;then
  if herbstclient substitute TAG clients.$(cat $SCRATCHPAD).tag compare monitors.focus.tag = TAG 2>/dev/null ;then
    search --onlyvisible windowunmap >/dev/null
    draw refresh
    focus window
    exit
  fi
fi

# ............................................................... Restore window

focus frame

# bring window into focus and verify winid
[ -f $SCRATCHPAD ] && herbstclient bring $(cat $SCRATCHPAD) 2>/dev/null && focus_check

# recover winid if somehow it differs
search '' windowmap >/dev/null
[ $(winid) != 0x0 ] && echo $(winid) >$SCRATCHPAD
focus_check

# check winid's just in case.. it happens!
winid=$(query title $name)
if [ $winid ] ;then
  echo $winid >$SCRATCHPAD
  herbstclient bring $winid 2>/dev/null
fi
focus_check

# .......................................................... Create new instance

# cancel out above focus frame, tmux rules!
case $term in
byobu ) tmux_session $name ;;
tmux  ) tmux_session $name ;;
screen) tmux_session $name ;;
*     ) term $name FORTUNE TABBED ;;
esac
search '--sync --onlyvisible' >/dev/null
herbstclient attr clients.focus.winid >$SCRATCHPAD

# vim: set ft=sh: #
